#!/bin/bash

# afrab-enc - part of agrab project
# Copyright (C) 2012 Basavanagowda Kanur
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,
# USA.

function init
{
    if [ -z "$input" ]; then
        echo
        echo "$0: no input file to read from"
        echo

        usage

        exit 2;
    fi

    echo "$0: reading from input - $input"

    if [[ ! -p $input ]]; then
	echo "$0: input file is missing, check if afrab-tee is running"
	exit 1;
    fi

    rm -f ${output};
}

function main
{
    if [ -z "$LIVE" ]; then
	ffmpeg -v 0 -r 30 -vcodec rawvideo -f rawvideo \
	    -pix_fmt rgb565 -s 480x800 -i $input \
	    -vcodec mpeg4 -re $output >/dev/null 2>&1
    else
	output="rtmp://localhost/live/android-$device"

	echo "streaming live at - $output"

	ffmpeg -v 0 -r 30 -vcodec rawvideo -f rawvideo \
	    -pix_fmt rgb565 -s 480x800 -i $input \
	    -vcodec mpeg4 -re $output >/dev/null 2>&1
    fi
}

function usage
{
    echo "Usage: $0 [options]"
    echo
    echo "Options:"
    echo " -o, --output=OUTPUT-PATH"
    echo " -s, --serial=SERIAL-OF-ANDROID      serial identifier for emulator"
    echo " -L, --live"
}

function parse_cmdline
{
    if [ `uname` == "Darwin" ]; then
	args=`getopt ho:s:Li: $@`;
    elif [ `uname` == "Linux" ]; then
	args=`getopt -u -o ho:s:Li: \
            --long help,output:,serial:,live,input: -- "$@"`;
    else
	echo "You need a GNU/Linux or Mac OS X to run $0";
	exit 0;
    fi

    if [ $? != 0 ]; then
        usage
	exit 2
    fi

    set -- $args

    for i; do
	case "$i" in
            -h|--help)
                usage;
                exit 0;;
	    -s|--serial)
		device="$2";
		shift;
		shift;;
	    -o|--output)
		output="$2";
		shift;
		shift;;
            -i|--input)
                input="$2";
                shift;
                shift;;
	    -L|--live)
		LIVE="-L";
		echo "streaming live through rtmp";
		shift;;
	    --)
		shift;
		break;;
	esac
    done
}

parse_cmdline "$@" && init && main