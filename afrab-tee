#!/bin/bash

# afrab-tee - part of agrab project
# Copyright (C) 2012 Basavanagowda Kanur
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,
# USA.

#
# afrab-tee - Android FRAme Buffer TEE
#
# copy android's frame-buffer into a named pipe - @pipe
#

function init
{

    if [ -z "$pipe" ]; then
        error "output file (FIFO) not specified, $0 refuses to continue"

        usage

        exit 2;
    fi

    lockfile="/var/lock/"$(basename $pipe '.pipe');

    lockfile-create ${lockfile};

    if [ -z "${ASDK_PATH}" ]; then
        ADB="adb"
    else
        ADB=${ASDK_PATH}/platform-tools/adb
    fi

    trap "rm -f $pipe; lockfile-remove $lockfile; exit" EXIT SIGINT SIGTERM SIGKILL

    if [[ ! -p $pipe ]]; then
	mkfifo $pipe
    fi
}

function main
{
    while true; do
	${ADB} -s $device pull /dev/graphics/fb0 /dev/stdout \
	    1>>$pipe

        if [ $? != 0 ]; then
            debug "exiting.."

            exit 2
        fi
    done
}

function usage
{
    echo "Usage: $0 [options]"
    echo
    echo "Options:"
    echo " -s, --serial=SERIAL-OF-ANDROID      serial identifier for emulator"
    echo " -A, --android-sdk=ANDROID-SDK-PATH  android sdk to use"
    echo " -p, --pipe=PIPE                     use PIPE as pipe to write frames"
}

function parse_cmdline
{
    if [ `uname` == "Darwin" ]; then
	args=`getopt hds:A:p: $@`;
    elif [ `uname` == "Linux" ]; then
	args=`getopt -u -o hds:A:p: \
            --long help,debug,serial:,android-sdk:,pipe: -- "$@"`;
    else
	error "You need a GNU/Linux or Mac OS X to run $0";
	exit 0;
    fi

    if [ $? != 0 ]; then
        usage
	exit 2
    fi

    set -- $args

    for i; do
	case "$i" in
            -h|--help)
                usage;
                exit 0;;
            -d|--debug)
                AGRAB_DEBUG="true";
                shift;;
	    -s|--serial)
		device=$2;
		shift;
		shift;;
            -A|--android-sdk)
                ASDK_PATH="$2";

		# check if ASDK_PATH actually contains android-sdk
		if [ ! -x ${ASDK_PATH}/platform-tools/adb ]; then
		    error "$ASDK_PATH does not point to a valid android SDK";
		    exit 2;
		fi

                shift;
                shift;;
            -p|--pipe)
                pipe="$2";
                shift;
                shift;;
	    --)
		shift;
		break;;
	esac
    done
}

parse_cmdline "$@" && init && main
